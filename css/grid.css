/* Properties to the grid container*/

/* Add columns */
.container {
  display: grid;
  grid-template-columns: 50px 50px;
}

/* Add rows */
.container {
  display: grid;
  grid-template-rows: 50px 50px;
}

/* css grid units */
/* 
    fr: sets the column or row to a fraction of the available space,
    auto: sets the column or row to the width or height of its content automatically,
    %: adjusts the column or row to the percent width of its container. */
/* 
/* 
   The last two columns share the remaining space*/
.container {
  grid-template-columns: auto 50px 10% 2fr 1fr;
}

/* add gaps */
.container {
  display: grid;
  column-gap: 20px;
  row-gap: 5px;
  gap: 5px 20px;
}

/* justifty-items */
/* 
   Align all content's items horizontally  */
.container {
  display: grid;
  justify-items: center;
}
/*

/* align-items */
/* 
    Align all content's items vertically */
.container {
  display: grid;
  align-items: end;
}

/* Properties to the grid-items */

/* grid-column & grid-row*/
/* 
    you can use the grid-column property in conjunction with the line numbers you want the item to start and stop at.*/
.item5 {
  grid-column: 2 / 4;
  grid-row: 2 / 4;
}
/* 

/* justify-self */
/* 
    Align the content's position within its cell horizontally 
    default: stretch | start | center | end*/
.item2 {
  justify-self: center;
}

/* align-self */
/* 
    Align the content's item vertically */
.item2 {
  align-self: end;
}

/* Divide the grid into an area template */
/* 
    Note:  The area template should form a square*/
.container {
  display: grid;
  grid-template-areas:
    "header header header"
    "advert content content"
    "advert footer footer";
}

/* Place items in grid areas  */
.item1 {
  grid-area: header;
}
.item5 {
  grid-area: 3 / 1 / 4 / 4;
}

/* repeat function */
.container {
  grid-template-columns: 1fr 50px 1fr 50px 20px;
  grid-template-columns: repeat(2, 1fr 50px) 20px;
}

/* minmax built-in */
.container {
  display: grid;
  grid-template-columns: repeat(3, minmax(90px, 1fr));
  grid-template-rows: 1fr 1fr 1fr;
}

/* auto-fill */
/* 
    This allows you to automatically insert as many rows or columns of your desired size as possible depending on the size of the container */
.container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
  grid-template-rows: 1fr 1fr 1fr;
}

/* auto-fit */
/* 
    Stretches your items to fit the size of the container. 
    Note: If your container can't fit all your items on one row, it will move them down to a new one*/
.container2 {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(60px, 1fr));
  grid-template-rows: 1fr 1fr 1fr;
}

/* Use Media Queries to create responsive layouts */
@media (min-width: 300px) {
  .container {
    grid-template-columns: auto 1fr;
    grid-template-rows: auto 1fr auto;
    grid-template-areas:
      "advert header"
      "advert content"
      "advert footer";
  }
}

@media (min-width: 400px) {
  .container {
    grid-template-areas:
      "header header"
      "advert content"
      "footer footer";
  }
}

/* Create grid within grids */
.item3 {
  grid-area: content;
  display: grid;
  grid-template-columns: auto 1fr;
}
