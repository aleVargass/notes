*** Terminal y linea de comandos ***

--- Comandos ---
echo [-neE] [arg ...]
	display the ARGs, separated by a single space character
printenv
	Print the values of the specified enviroment VARIABLE(s)

mkdir[OPTION]... DIRECTORY...
	Create the DIRECTORY(ies), if they do not already exist

cd [OPTION] 
	Change directory

rm [OPTION]... [FILE]...
	Remove directory
	-r recursive, for directories
	-i prompt before remove
	-f forced

ls [OPTION]... [FILE]... 
	List information about the FILEs

pwd
	Print the name of the current directory

uname [OPTION]...
	Print certain system information

cp [OPTION]... SOURCE DEST
	Copy SOURCE to DEST
	-r recursive, for directories
	-i interactive
	-f forced

mv [OPTION]... SOURCE DEST
	Rename SOURCE to DEST
	-f force	
	-i interactive

tree
	Show directories in tree form

whoami
	Show user

chmod [OPTION]... MODE FILE...
	Change permises 
	-R recursive

find [-H] [-L] [-P] [-Olevel] [-D debugopts] [path...] [expression]
	
chown [OPTION]... [OWNER][:[GROUP]] FILE...
	Change the owner and group of each file to owner and/or group
	  --recursive

umask [-p] [-S] [mode]
	Display or set file mode mask.
head [OPTION]... [FILE]...
	-c, --bytes=NUM
	-n, --lines=NUM
	stdout the 10 first lines
tail [OPTION]... [FILE]...
	Print the 10 last lines to stdout
	-c, --bytes=NUM
	-n, --lines=NUM
	-f, --follow[={name|descriptor}]
                           output appended data as the file grows

clip < [FILE] Copy the file content to the portpaper

UBICACIONES
~ - home
. - same directory
.. - directory father
- - previous directory
"" || \ - escape a character

TIPOS DE ARCHIVOS
- regulares
b especial tipo bloque
c especiales tipo carácter
d directorios
l enlaces simbólicos
n archivos de red
p especiales tipo pipe
s tipo socket

GRUPOS DE PERMISOS
usuario, grupo, otros

MODO OCTAL
0 = --- = sin acceso
1 = --x = ejecución
2 = -w- = escritura
3 = -wx = escritura y ejecución
4 = r-- = lectura
5 = r-x = lectura y ejecución
6 = rw- = lectura y escritura
7 = rwx = lectura, escritura y ejecución

permiso x en archivos tipo d representa acceso, no ejecucion

COMUNES
chmod 644 típico para archivos. Lectura y escritura por parte del propietario y 	lectura solo para el resto aunque pertenezcan al grupo.
chmod 755 típico para directorios, porque da todos los permisos

MODO SIMBOLICO
u  usuario
g  grupo
o  otros
a  all

+ añade un permiso
- quita un permiso
= asigna un permiso

COMUNES
chmod u=rw,g=r,o=r típico para achivos. Lectura y escritura por parte del propietario y lectura solo para el resto aunque pertenezcan al grupo.
chmod u=rwx,g=rx,o=rx típico para directorios, porque da todos los permisos al propietario, mientras que al resto solo les da permiso de acceso y lectura.
chmod u+x añades el permiso de ejecución al propietario del archivo, dejando el resto de permisos como estuvieran.

--- Cambio -r de permisos ---
find directorio -type d -exec chmod 755 {} + 
find directorio -type d -exec chmod 644 {} +

--- Comodines ---

? 1 character
* 0 or any character
[] range
{} set of comodins, no left spaces between comodins
Ex. ls {sda*,sdb*}
[!] no range
Ex. ls /dev/sda[!1-5] -> /dev/sda6 y /dev/sda7
\ escape

--- Regex ---

. 1 character
\ escape
+ 1 o mas coincidencias
* 0 o mas coincidencias
^ debe comenzar igual si esta al inicio
$ debe terminar igual si esta al final
[] rango, [a,b,c] o [a-c]
| or
[^] not rango
{} numero de repeticiones del caracter

flags
	\s whitespace
	\S no whitespace
	\d digit
	\D no digit
	\w === [a-zA-Z0-9_]
	\W === [^a-zA-Z0-9_]
	\n newline
	\r car return
	\t tab
	\0 null character
regex101.com to check the regular expresion

--- stdin & stdout ---

[COMMAND]>[ARCHIVE] || 1> 				COMMAND stdout redirect to ARCHIVE
[COMMAND]>>[ARCHIVE] 					COMMAND stdout add to ARCHIVE
[COMMAND]2>[ARCHIVE] 					stderr
[COMMAND]>[ARCHIVE] 2>&1 || [COMMAND]&>>[ARCHIVE] 	stdout and err pointing same archive
[COMMAND]<[ARCHIVE] 					stdin, take ARCHIVE to the COMMAND
Ex: rev < text.txt > rev-text.txt			---

--- pipes ---
[COMMAND] | [COMMAND] 
	1st COMMAND stdout -> 2nd COMMAND stdin

--- awk---
awk [OPTION] 'ARG-OPTION' 'BEGIN{IGNORECASE=1} PATTERN{INSTRUCTION $NUM ""}' FILES...
Options
	-f '[separator]'
Instructions
	length
	index
	substr
	tolower
	toupper
	printf
	print
	sprintf
->awk instructions no working me

--- grep ---
grep [OPTION]... PATTERN [FILE]...
	-i ignore case
	-c count
	-v invert match
	-s no show msg errors
Ex. grep -i 'git-course' *

--- sed ---
* Editor de flujo de texto
* Modifica el flujo de entrada, pero no el archivo original, para guarda ese flujo de salida modificado hay que redirigirlo
* No redirige stdout

Usage: sed [OPTION]... {script-only-if-no-other-script} [input-file]...
Ex. sed 's/vargas/vrgs/gi' rute.txt > rute-changed.txt

--- cut ---
Usage: cut OPTION... [FILE]...
Print selected parts of lines from each FILE to standard output.
	-b, --bytes=LIST
	-c, ---character=LIST
	-d, --delimiter=DELIM
	-f, --fields=LIST

In LIST - means the range, an empty value means go on
Ex. cut -d ';' -f -5 letters.csv	

--- sort ---
Usage: sort [OPTION]... [FILE]...
Write sorted concatenation of all FILE(s) to standard output.
	-r 	reverse
	-f	ignore case
	-n	numeric sort 		1,10,2
	-h	human numeric sort   	1,2,10

--- uniq ---
Usage: uniq [OPTION]... [INPUT [OUTPUT]]
Filter adjacent matching lines from INPUT (or standard input),
writing to OUTPUT (or standard output).
	-u print uniq lines
	-d print duplicated lines
	-c count repeated lines
Ex. sort -h nums.txt | uniq -c

--- fmt ---
Usage: fmt [-WIDTH] [OPTION]... [FILE]...
Reformat each paragraph in the FILE(s), writing to standard output.
	-w maximun line width
	-s split long lines
	-u one space between words
Ex. fmt ejemplo.txt | awk '{print $(NF-1)}'

--- tr ---
Usage: tr [OPTION]... SET1 [SET2]
Translate, squeeze, and/or delete characters from standard input,
writing to standard output.
Reemplaza la letra correspondiente
	-d delete letter
Ex. tr ae o < file.txt -> olo os chido

--- cat ---
Usage: cat [OPTION]... [FILE]...
Concatenate FILE(s) to standard output.
* cat file.txt > file-2.txt save file.txt content in file-2.txt	

--- split ---
Usage: split [OPTION]... [FILE [PREFIX]]
Output pieces of FILE to PREFIXaa, PREFIXab, ...;
default size is 1000 lines, and default PREFIX is 'x'.
	-l lines per files
	-n number of files, divide in  bytes
	-b size bytes per files

Ex. 	split -n 2 printenv.txt _
	_aa  _ab  combined-files.txt  file.txt  printenv.txt  pwd.txt

--- wc ---
Usage: wc [OPTION]... [FILE]...
Print newline, word, and byte counts for each FILE, and a total line if
more than one FILE is specified.  A word is a 
	-c bytes
	-m characters
	-l lines
	-w words, non-zero-length sequence ofcharacters delimited by white space.
Ex. wc -w _aa _ab

--- expand and unexpand ---
* unexpected behaviour, no visible changes
Usage: expand [OPTION]... [FILE]...
	-t tab size

--- join ---
Usage: join [OPTION]... FILE1 FILE2
For each pair of input lines with identical join fields, write a line to
standard output.  The default join field is the first, delimited by blanks. Must be sorted

--- find ---
Usage: find [DIR] [OPTION] [EXPRESSION] [ACTION]
	Dir:
	/ All sys
	. Current dir
	~ Home dir
	Options:
	-name, find by name EXPRESSION
	-iname, not case sensitive
	-not, deny the OPTIONs
	-type, find by type
	Type:
	-empty, empty files and dirs
	-exec, executables files
	-read, readable files
	d, dir
	f, normal file
	l, symbolic link
	c, characters devices
	b, block devices
	Actions:
	-delete
	Date:
	-atime [N], access time, N = days since the last access
	-mtime, modification time
	-ctime, change time
	Size: 
	-size [SIZE]
	c, bytes
	k, kilobytes
	M, megabytes
	G, gigabytes
	b, part 512 bytes
	Property:
	-user
	-group
	Permises:
	-perm [PERM]

--- less ---
Es un visor de files
	--help
	q, exit visor

--- zles ---
visor zip files
Para archivos log

--- editores de texto para la terminal ---
nano 
vim
jed
micro
--- ayuda ---
man
tldr
cheat